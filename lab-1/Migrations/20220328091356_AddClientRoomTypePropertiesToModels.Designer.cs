// <auto-generated />
using DataAnnotations.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataAnnotations.Migrations
{
    [DbContext(typeof(DataAnnotationsContext))]
    [Migration("20220328091356_AddClientRoomTypePropertiesToModels")]
    partial class AddClientRoomTypePropertiesToModels
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DataAnnotations.Models.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CurrentRoomId")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("varchar(25)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("varchar(25)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PreviousRoomId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Client");
                });

            modelBuilder.Entity("DataAnnotations.Models.Room", b =>
                {
                    b.Property<string>("RoomNumber")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<int>("CurrentClientId")
                        .HasColumnType("int");

                    b.Property<int>("PreviousClientId")
                        .HasColumnType("int");

                    b.Property<int>("Section")
                        .HasColumnType("int");

                    b.HasKey("RoomNumber");

                    b.HasIndex("CurrentClientId")
                        .IsUnique();

                    b.HasIndex("PreviousClientId")
                        .IsUnique();

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("DataAnnotations.Models.Room", b =>
                {
                    b.HasOne("DataAnnotations.Models.Client", "CurrentClient")
                        .WithOne("CurrentRoom")
                        .HasForeignKey("DataAnnotations.Models.Room", "CurrentClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAnnotations.Models.Client", "PreviousClient")
                        .WithOne("PreviousRoom")
                        .HasForeignKey("DataAnnotations.Models.Room", "PreviousClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CurrentClient");

                    b.Navigation("PreviousClient");
                });

            modelBuilder.Entity("DataAnnotations.Models.Client", b =>
                {
                    b.Navigation("CurrentRoom")
                        .IsRequired();

                    b.Navigation("PreviousRoom")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
